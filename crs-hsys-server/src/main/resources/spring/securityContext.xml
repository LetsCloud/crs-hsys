<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<http pattern="/_ah/**" security="none" />
	<http pattern="/service-worker.js" security="none" />
	<http pattern="/KIP_launcher-icons/**" security="none" />
	<http pattern="/FRO_launcher-icons/**" security="none" />
	<http pattern="/INF_launcher-icons/**" security="none" />
	<http pattern="/CFG_launcher-icons/**" security="none" />

	<authentication-manager
		alias="authenticationManager">
		<authentication-provider
			ref="gaeAuthenticationProvider" />
		<authentication-provider
			ref="appAuthenticationProvider" />
	</authentication-manager>


	<!-- **************************** -->
	<!-- Admin felület autentikációjs -->
	<!-- **************************** -->
	<http pattern="/admin/**" use-expressions="true"
		entry-point-ref="gaeEntryPoint">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/register.htm*"
			access="hasRole('NEW_USER')" />
		<intercept-url pattern="/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/admin/spa/v1/logout"
			access="permitAll" />
		<custom-filter position="PRE_AUTH_FILTER"
			ref="gaeFilter" />
		<csrf token-repository-ref="tokenRepository" />
	</http>

	<beans:bean id="gaeEntryPoint"
		class="io.crs.hsys.server.security.gae.GoogleAccountsAuthenticationEntryPoint" />

	<beans:bean id="gaeFilter"
		class="io.crs.hsys.server.security.gae.GaeAuthenticationFilter">
		<beans:property name="authenticationManager"
			ref="authenticationManager" />
		<beans:property name="failureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
				<beans:property name="exceptionMappings">
					<beans:map>
						<beans:entry
							key="org.springframework.security.authentication.DisabledException"
							value="/disabled.htm" />
					</beans:map>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="gaeAuthenticationProvider"
		class="io.crs.hsys.server.security.gae.GoogleAccountsAuthenticationProvider">
		<beans:property name="userRegistry" ref="userRegistry" />
	</beans:bean>

	<beans:bean id="userRegistry"
		class="io.crs.hsys.server.security.gae.GaeDatastoreUserRegistry" />


	<!-- *********************************** -->
	<!-- Felhasználói felület autentikációjs -->
	<!-- *********************************** -->

	<beans:bean id="registrationListener"
		class="io.crs.hsys.server.security.RegistrationListener">
		<beans:property name="appUserService"
			ref="appUserService" />
		<beans:property name="messageSource"
			ref="messageSource" />
	</beans:bean>

	<beans:bean id="loggedInChecker"
		class="io.crs.hsys.server.security.LoggedInChecker">
		<beans:constructor-arg ref="modelMapper" />
	</beans:bean>

	<beans:bean id="loginAttemptService"
		class="io.crs.hsys.server.security.LoginAttemptService" />

	<beans:bean id="appUserDetailsService"
		class="io.crs.hsys.server.security.AppUserDetailsService">
		<beans:constructor-arg ref="appUserService" />
		<beans:constructor-arg ref="loginAttemptService" />
		<beans:constructor-arg ref="modelMapper" />
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>

	<beans:bean id="appAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService"
			ref="appUserDetailsService" />
		<beans:property name="passwordEncoder"
			ref="passwordEncoder" />
	</beans:bean>

	<!-- =================== -->
	<!-- APP SECURITY CONFIG use-expressions="true" -->
	<!-- =================== -->
	<http use-expressions="true">
		<intercept-url pattern="/_ah/**" access="permitAll" />
		<intercept-url pattern="/login*" access="permitAll" />
		<intercept-url pattern="/signup*" access="permitAll" />
		<intercept-url pattern="/registration*"
			access="permitAll" />
		<intercept-url pattern="/activate/**" access="permitAll" />
		<intercept-url pattern="/static/**" access="permitAll" />

		<intercept-url pattern="/**" access="authenticated" />

		<http-basic />

		<form-login login-page="/login"
			login-processing-url="/login" username-parameter="username"
			password-parameter="password" default-target-url="/launchboard"
			authentication-failure-url="/login.html?error=true" />

		<logout logout-url="/logout"
			logout-success-url="/login.html?logout" />

		<csrf token-repository-ref="tokenRepository"
			request-matcher-ref="csrfSecurityRequestMatcher" />
	</http>

	<beans:bean id="tokenRepository"
		class="org.springframework.security.web.csrf.CookieCsrfTokenRepository">
		<beans:property name="cookieHttpOnly" value="false" />
		<beans:property name="headerName" value="XSRF-TOKEN" />
	</beans:bean>

	<beans:bean id="csrfSecurityRequestMatcher"
		class="io.crs.hsys.server.security.CsrfSecurityRequestMatcher" />
</beans:beans>